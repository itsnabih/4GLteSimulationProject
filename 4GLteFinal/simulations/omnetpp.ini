[General]
image-path=../../images
#tkenv-plugin-path = ../../../inet/etc/plugins
output-scalar-file-append = false
sim-time-limit=20s

#Statistics 
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
seed-set = ${repetition}
**.vector-recording = true  # Enabled for detailed per-event data

#Mobility parameters
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMaxX = 1000m
**.mobility.constraintAreaMaxY = 1000m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = true

#Number of Resource Blocks
**.numBands = 6  # Adjusted for bandwidth requirements of the network

#Transmission Power
**.ueTxPower = 26
**.eNodeBTxPower = 40

#IPv4 configurator config
*.configurator.config = xmldoc("./demo.xml")

[Config VideoStreaming]
network = _4gltefinal.simulations.SingleCell
description = Multiple UEs downloading a video from a server.

**.ue[*].numApps = 1
**.server.numApps = 1

**.numUe = ${numUEs=1,2,5,10,20,50,100}

**.mobility.constraintAreaMinX = 300m
**.mobility.constraintAreaMinY = 200m
**.mobility.constraintAreaMaxX = 800m
**.mobility.constraintAreaMaxY = 400m

**.ue[*].masterId = 1
**.ue[*].macCellId = 1
**.ue[*].mobility.initFromDisplayString = false
**.ue[*].mobility.typename = "LinearMobility"
**.ue[*].mobility.speed = uniform(1mps, 3mps)  # Added user movement

**.ue[*].app[*].typename = "UdpVideoStreamClient"
**.ue[*].app[*].serverAddress = "server"
**.ue[*].app[*].localPort = 9999
**.ue[*].app[*].serverPort = 3088
**.ue[*].app[*].startTime = uniform(0s, 0.02s)

**.server.app[*].typename = "UdpVideoStreamServer"
**.server.app[*].videoSize = 10MiB
**.server.app[*].localPort = 3088
**.server.app[*].sendInterval = 20ms
**.server.app[*].packetLen = 1000B  # Standardize packet length for video
**.mtu = 10000B

############### QoS Configuration for Video Streaming ##################
**.server.app[*].qos = "HighPriority"  # Assign high priority to video streaming
**.ue[*].app[*].qos = "HighPriority"   # Ensure video streaming has high priority in both directions

[Config VoIP]
network = _4gltefinal.simulations.SingleCell

# Schedulers
**.mac.schedulingDisciplineDl = "MAXCI"
**.mac.schedulingDisciplineUl = "MAXCI"

# one UDP application for each user
*.ue[*].numApps = 1
*.server.numApps = 1

# connect each UE to the eNB
**.ue[*].macCellId = 1
**.ue[*].masterId = 1

# positioning and mobility
*.ue[*].mobility.initialMovementHeading = uniform(0deg, 360deg)
*.ue[*].mobility.constraintAreaMaxX = 1000m
*.ue[*].mobility.constraintAreaMaxY = 1000m
*.ue[*].mobility.constraintAreaMinX = 0m
*.ue[*].mobility.constraintAreaMinY = 0m
*.ue[*].mobility.initFromDisplayString = false
*.ue[*].mobility.initialX = uniform(0m, 300m)
*.ue[*].mobility.initialY = uniform(0m, 300m)
*.ue[*].mobility.initialZ = 0m
*.ue[*].mobility.speed = uniform(1mps, 3mps)  # Mobility added
*.ue[*].mobility.typename = "LinearMobility"

#============= Application Setup =============
*.ue[*].app[*].typename = "VoIPReceiver"
*.ue[*].app[0].localPort = 3000

*.server.app[*].PacketSize = 40
*.server.app[*].destAddress = "ue["+string(ancestorIndex(0))+"]"  # Obtain the address of the client by reading its index
*.server.app[*].destPort = 3000
*.server.app[*].localPort = 3088 + ancestorIndex(0)
*.server.app[*].typename = "VoIPSender"
*.server.app[*].startTime = uniform(0s, 0.02s)

############### QoS Configuration for VoIP ##################
**.server.app[*].qos = "HighPriority"  # Assign high priority to VoIP traffic
**.ue[*].app[*].qos = "HighPriority"   # Ensure VoIP has high priority in both directions

[Config BiDirectionalTraffic]
network = _4gltefinal.simulations.SingleCell

**.mac.schedulingDisciplineDl = "MAXCI"
**.mac.schedulingDisciplineUl = "MAXCI"

# one UDP application for each user
*.ue[*].numApps = 1

*.server.numApps = 1

# connect each UE to the eNB
**.ue[*].macCellId = 1
**.ue[*].masterId = 1

# positioning and mobility
*.ue[*].mobility.initialMovementHeading = uniform(0deg, 360deg)
*.ue[*].mobility.constraintAreaMaxX = 1000m
*.ue[*].mobility.constraintAreaMaxY = 1000m
*.ue[*].mobility.constraintAreaMinX = 0m
*.ue[*].mobility.constraintAreaMinY = 0m
*.ue[*].mobility.initFromDisplayString = false
*.ue[*].mobility.initialX = uniform(0m, 300m)
*.ue[*].mobility.initialY = uniform(0m, 300m)
*.ue[*].mobility.initialZ = 0m
*.ue[*].mobility.speed = 1mps
*.ue[*].mobility.typename = "LinearMobility"

#============= Application Setup =============
*.ue[*].app[*].typename = "VoIPReceiver"
*.ue[*].app[0].localPort = 3000

*.server.app[*].PacketSize = 40
*.server.app[*].destAddress = "ue["+string(ancestorIndex(0))+"]"  # Ensure correct client routing
*.server.app[*].destPort = 3000
*.server.app[*].localPort = 3088 + ancestorIndex(0)
*.server.app[*].typename = "VoIPSender"
*.server.app[*].startTime = uniform(0s, 0.02s)